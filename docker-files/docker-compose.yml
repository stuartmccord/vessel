version: '2'
services:
  nginx:
    image: nginx:stable
    ports:
     - "${APP_PORT}:80"
    networks:
     - vessel
    environment:
      CONTAINER_ENV: "${APP_ENV}"
      WWWUSER: "${WWWUSER}"
    volumes:
     - .:/var/www/html
     - ./docker/nginx/h5bp:/etc/nginx/h5bp
     - ./docker/nginx/default:/etc/nginx/conf.d/default.conf
  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    networks:
     - vessel
    volumes:
     - .:/var/www/html
  node:
    build:
      context: ./docker/node
      dockerfile: Dockerfile
      args:
        uid: "${WWWUSER}"
    image: vessel/node
    user: node
    volumes:
     - .:/var/www/html
    networks:
     - vessel
  mysql:
    image: mysql:5.7
    ports:
     - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
     - vesselmysql:/var/lib/mysql
     # - ./docker/mysql/conf.d:/etc/mysql/conf.d
     # - ./docker/mysql/logs:/var/log/mysql
    networks:
     - vessel
  redis:
    image: redis:alpine
    volumes:
     - vesselredis:/data
    networks:
     - vessel
networks:
  vessel:
    driver: "bridge"
volumes:
  vesselmysql:
    driver: "local"
  vesselredis:
    driver: "local"
